/*

    Version : 0.3.6
    Last update : 21/03/2022
    See changelog here : https://github.com/n-deleforge/littlejs/
    
*/

function get(e){return 0==e.search("#")&&null!=e.split("#")[1]&&null!=document.querySelector(e)?document.querySelector(e):0==e.search(".")&&null!=e.split(".")[1]&&0!=document.querySelectorAll(e).length?document.querySelectorAll(e):0==e.search("~")&&null!=e.split("~")[1]&&null!=document.querySelectorAll(e.split("~")[1])[0]?document.querySelectorAll(e.split("~")[1])[0]:void 0}function rand(e,t){if(e<t)return Math.floor(Math.random()*t)+e}function randomValue(e=15){let t;const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let o=0;o<e;o++)0===o?t=n.charAt(Math.floor(Math.random()*n.length)):t+=n.charAt(Math.floor(Math.random()*n.length));return t}function ucFirst(e){return e.charAt(0).toUpperCase()+e.slice(1)}function plural(e,t,n){if(e>-1)return e<2?t:n}function getStorage(e){if(e&&localStorage.getItem(e))return localStorage.getItem(e)}function setStorage(e,t){e&&t&&localStorage.setItem(e,t)}function remStorage(e){e&&localStorage.getItem(e)&&localStorage.removeItem(e)}function getCookie(e){let t;return document.cookie.split("; ").forEach(n=>{if(n.split("=")[0]==e){const e=n.split("=")[1];t="true"==e||"false"!=e&&e}}),t}function setCookie(e,t,n=365,o=!1){let r=new Date;r.setTime(r.getTime()+24*n*60*60*1e3);const a="Expires="+r.toGMTString();document.cookie=o?e+"="+t+"; "+a:e+"="+t+"; "+a+"; Path=/; SameSite=Strict; Secure"}function remCookie(e,t=!1){getCookie(e)&&(document.cookie=t?e+"=; Expires=Thu, 01 Jan 1970 00:00:00 UTC;":e+"=; Expires=Thu, 01 Jan 1970 00:00:00 UTC; Path=/; SameSite=Strict; Secure")}function getVariableCSS(e){const t=getComputedStyle(document.documentElement).getPropertyValue("--"+e);if(""!==t)return t}function wait(e){return new Promise(t=>{setTimeout(()=>{t()},e)})}function download(e,t){const n=new Blob([e],{type:"text/plain"}),o=document.createElement("a");o.download=t,o.href=window.URL.createObjectURL(n),o.click()}async function downloadImage(e){const t=await fetch(e),n=await t.blob(),o=URL.createObjectURL(n),r=document.createElement("a");r.download=randomValue(),r.href=o,r.click()}function navigate(e,t=!0){const n=document.createElement("a");n.href=e,t&&n.setAttribute("target","_blank"),n.click()}function dump(e,t="dark"){const n=document.createElement("style");n.innerHTML="\n    .dump {\n        font-family: Monospace !important;\n        font-size: 1em;\n        padding: 1vh 2vw;\n    }\n    .dumpHead {\n        font-weight: bolder;\n        color: lightcoral;\n        font-size: 1.5em;\n        margin-bottom: 0.5vw;\n        text-transform: capitalize;\n    }\n    .dumpLight {\n        background-color: lightgrey;\n        color: black;\n    }\n    .dumpDark {\n        background-color : black;\n        color: white;\n    }";const o=document.createElement("div"),r="dark"==t?"dumpDark":"dumpLight";o.classList.add("dump"),o.classList.add(r);let a=typeof e;switch(a){case"undefined":case"null":o.innerHTML="<span class='dumpHead'>Error</span><br />This function cannot display undefined or null data.";break;case"object":Array.isArray(e)?(o.innerHTML="<span class='dumpHead'>Array</span><br />",e.forEach(e=>{o.innerHTML+=e+"<br />"})):(o.innerHTML="<span class='dumpHead'>Object</span><br />",Object.keys(e).forEach(t=>{"object"==typeof e[t]&&null!==e[t]?o.innerHTML="<span class='dumpHead'>Error</span><br />This function cannot display object of multiples objects.":o.innerHTML+=t+" : "+e[t]+"<br />"}));break;default:o.innerHTML="<span class='dumpHead'>"+a+"</span><br />"+e}get("~head").appendChild(n),document.body.insertBefore(o,get("~body").childNodes[0])}